---
# Pi-hole post-deployment configuration tasks
- name: Wait for Pi-hole to be ready
  ansible.builtin.wait_for:
    port: 8081
    host: "{{ ansible_host }}"
    delay: 15
    timeout: 180

- name: Install pihole6api in virtual environment
  ansible.builtin.pip:
    name: pihole6api
    state: present
    extra_args: --upgrade
    virtualenv: "{{ python_venv_path }}"
    virtualenv_command: "python{{ python_version }} -m venv"

- name: Display pip installation results
  ansible.builtin.debug:
    msg: |
      Pip installation results:
      - Changed: {{ pip_install_result.changed }}
      - Command: {{ pip_install_result.cmd | default('N/A') }}
      - Return code: {{ pip_install_result.rc | default('N/A') }}
  when: pip_install_result is defined

- name: List contents of virtual environment bin directory
  ansible.builtin.find:
    paths: /opt/pihole-venv/bin
    patterns: "*pihole*"
  register: venv_bin_contents

- name: Check if pihole6api module can be imported
  ansible.builtin.command:
    cmd: /opt/pihole-venv/bin/python -c "import pihole6api; print('pihole6api module imported successfully')"
  register: pihole6api_import_check
  changed_when: false
  failed_when: false

- name: Create symlink for pihole6api executable (if it exists)
  ansible.builtin.file:
    src: /opt/pihole-venv/bin/pihole6api
    dest: /usr/local/bin/pihole6api
    state: link
  failed_when: false
  when: venv_bin_contents.files | selectattr('path', 'match', '.*pihole6api$') | list | length > 0

- name: Create wrapper script for pihole6api module (if no executable)
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      /opt/pihole-venv/bin/python -m pihole6api "$@"
    dest: /usr/local/bin/pihole6api-module
    mode: '0755'
  when: 
    - pihole6api_import_check.rc == 0
    - venv_bin_contents.files | selectattr('path', 'match', '.*pihole6api$') | list | length == 0

- name: Verify pihole6api is available (try executable)
  ansible.builtin.command:
    cmd: /opt/pihole-venv/bin/pihole6api --help
  register: pihole6api_executable_check
  changed_when: false
  failed_when: false

- name: Verify pihole6api is available (try as module)
  ansible.builtin.command:
    cmd: /opt/pihole-venv/bin/python -m pihole6api --help
  register: pihole6api_module_check
  changed_when: false
  failed_when: false
  when: pihole6api_executable_check.rc != 0

- name: Set pihole6api command for future use
  ansible.builtin.set_fact:
    pihole6api_command: >-
      {{
        '/opt/pihole-venv/bin/pihole6api' if pihole6api_executable_check.rc == 0
        else '/opt/pihole-venv/bin/python -m pihole6api' if pihole6api_module_check.rc == 0
        else 'not_available'
      }}

- name: Display pihole6api verification results
  ansible.builtin.debug:
    msg: |
      ✅ pihole6api installation verification:
      - Package imported: {{ 'Yes' if pihole6api_import_check.rc == 0 else 'No' }}
      - Executable available: {{ 'Yes' if pihole6api_executable_check.rc == 0 else 'No' }}
      - Module callable: {{ 'Yes' if pihole6api_module_check.rc == 0 else 'No' }}
      - Command to use: {{ pihole6api_command }}
      - Bin directory contents: {{ venv_bin_contents.files | map(attribute='path') | select('match', '.*pihole.*') | list }}

- name: Configure Pi-hole block lists
  sbarbett.pihole.block_list:
    lists: 
      - address: "https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt"
        state: present
      - address: https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts
        state: present
      - address: https://v.firebog.net/hosts/static/w3kbl.txt
        state: present
      - address: https://adaway.org/hosts.txt
        state: present
      - address: https://v.firebog.net/hosts/AdguardDNS.txt
        state: present
      - address: https://v.firebog.net/hosts/Admiral.txt
        state: present
      - address: https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
        state: present
      - address: https://v.firebog.net/hosts/Easylist.txt
        state: present
      - address: https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
        state: present
      - address: https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
        state: present
      - address: https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
        state: present
      - address: https://v.firebog.net/hosts/Easyprivacy.txt
        state: present
      - address: https://v.firebog.net/hosts/Prigent-Ads.txt
        state: present
      - address: https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
        state: present
      - address: https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
        state: present
      - address: https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
        state: present
      - address: https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt
        state: present
      - address: https://v.firebog.net/hosts/Prigent-Crypto.txt
        state: present
      - address: https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts
        state: present
      - address: https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt
        state: present
      - address: https://phishing.army/download/phishing_army_blocklist_extended.txt
        state: present
      - address: https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
        state: present
      - address: https://v.firebog.net/hosts/RPiList-Malware.txt
        state: present
      - address: https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
        state: present
      - address: https://raw.githubusercontent.com/AssoEchap/stalkerware-indicators/master/generated/hosts
        state: present
      - address: https://urlhaus.abuse.ch/downloads/hostfile/
        state: present
      - address: https://lists.cyberhost.uk/malware.txt
        state: present
    url: "http://{{ ansible_host }}:{{ pihole_web_port }}"
    password: "{{ pihole_web_password }}"
    update_gravity: true

- name: Display Pi-hole access information
  ansible.builtin.debug:
    msg: |
      ✅ Pi-hole is configured successfully!
      Web Interface: http://{{ ansible_host }}:{{ pihole_web_port }}/admin
      DNS Server: {{ ansible_host }}:{{ pihole_dns_port }}
      Custom DNS entries configured for .mid.night domains