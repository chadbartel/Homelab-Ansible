---
# Docker installation and configuration tasks - SIMPLIFIED VERSION
- name: Install Docker prerequisite packages
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: true

- name: Create directory for Docker GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker's official GPG key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /tmp/docker.asc
    mode: '0644'

- name: Dearmor the Docker GPG key
  ansible.builtin.command:
    cmd: gpg --dearmor -o /etc/apt/keyrings/docker.gpg /tmp/docker.asc
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Update apt cache after adding Docker repo
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker Engine
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Install Python Docker SDK in virtual environment
  ansible.builtin.pip:
    name: docker
    state: present
    virtualenv: "{{ python_venv_path }}"
    virtualenv_command: "python{{ python_version }} -m venv"

- name: Add admin user to docker group
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: docker
    append: true

- name: Apply nuclear Docker fix for lenovo_server
  ansible.builtin.script: bash_scripts/fix-docker-socket.sh
  when: inventory_hostname == 'lenovo_server'
  register: docker_nuclear_fix

- name: Standard Docker startup for other hosts
  block:
    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true
        daemon_reload: true

    - name: Wait for Docker socket
      ansible.builtin.wait_for:
        path: /var/run/docker.sock
        timeout: 30
  when: inventory_hostname != 'lenovo_server'

- name: Reset SSH connection to pick up docker group membership
  ansible.builtin.meta: reset_connection

- name: Verify Docker is working
  ansible.builtin.command: docker info
  register: docker_verify
  changed_when: false
  retries: 3
  delay: 5

- name: Display Docker status
  ansible.builtin.debug:
    msg: |
      âœ… Docker successfully configured on {{ inventory_hostname }}
      Version: {{ ansible_local.docker.version | default('Unknown') }}
      Status: Working